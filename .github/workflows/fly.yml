# This is a basic workflow to help you get started with Actions

name: build and deploy to fly.io

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3 # this is action

        # sudo apt update
        # sudo apt install -y --fix-missing ffmpeg
      - name: build
        run: |
          ( curl -fLO https://releases.bazel.build/5.4.1/release/bazel-5.4.1-linux-x86_64 && chmod +x bazel-5.4.1-linux-x86_64 && cp bazel-5.4.1-linux-x86_64 /usr/local/bin)
          cp vendor/ffmpeg/amd64/ffmpeg /usr/local/bin
          export PATH=`pwd`/vendor/ffmpeg/amd64:$PATH
          bazel-5.4.1-linux-x86_64 build //...
          bazel-5.4.1-linux-x86_64 test //...

      - name: Cache
        uses: actions/cache@v3.0.2
        with:
          path: |
            bazel-bin
            bazel-out
          # https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows
          key: ${{ runner.os }}-bazel-build-outputs

      # https://docs.github.com/en/actions/learn-github-actions/expressions#failure conditional job
      - name: cat logs on failure
        if: ${{ failure() }}
        run: |
          ls .
          shopt -s globstar
          cat bazel-testlogs/**/*.log

      - name: send error message
        uses: appleboy/telegram-action@master
        if: ${{ failure() }}
        with:
          to: ${{ secrets.TELEGRAM_DEV_CHANNEL_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN_DEV_BOT }}
          args: "failed to deploy, link to commit https://github.com/${{ github.REPOSITORY }}/commit/${{ github.SHA }}"

      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLYIO_TOKEN }}

      # - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
      #   with:
      #     heroku_api_key: "${{secrets.HEROKU_API_KEY}}"
      #     heroku_app_name: ${{secrets.HEROKU_APP_NAME}} #Must be unique in Heroku
      #     heroku_email: ${{secrets.HEROKU_EMAIL}}

      - name: send default message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_DEV_CHANNEL_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN_DEV_BOT }}
          args: link to commit "https://github.com/${{ github.REPOSITORY }}/commit/${{ github.SHA }}"
